{"version":3,"sources":["country.js","wrapper.js","country-list.js","input.js","search.js","region.js","action-list.js","header.js","country-selected.js","country-page.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","cioc","nativeName","alpha2Code","history","useHistory","onClick","console","log","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","countryFilteredByRegion","useEffect","fetch","then","response","json","list","type","payload","catch","map","key","InputStyled","label","Input","props","class","SearchStyled","Search","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","RegionFilterStyled","select","Region","selectEvent","regionSelected","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","subregion","topLevelDomain","currencies","languages","borders","item","CountryPageStyled","CountryPage","match","DBcountry","find","params","id","country","setCountry","toLowerCase","data","goBack","store","createStore","action","filter","includes","countryFilterByRegion","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.117cb5a9.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n    useHistory,\r\n} from 'react-router-dom'\r\nimport slugify from 'slugify'\r\n\r\n\r\nconst CountryStyled = styled.div`\r\n cursor: pointer;\r\n text-align: left;\r\n//  overflow: hidden;\r\n box-shadow: 0 0 7px 2px rgba(0,0,0,.03);\r\n &:hover .details{\r\n    border-radius: 0 0 5px 5px; \r\n    border: 1px solid var(--black);\r\n    border-top: none;\r\n }\r\n img{\r\n     width: 100%;\r\n     height: 160px;\r\n     object-fit: cover;\r\n     vertical-align: top;\r\n     border-radius: 5px 5px 0 0;\r\n }\r\n .details{\r\n     padding: 1.5em;\r\n     border: 1px solid transparent;\r\n     border-top: none;\r\n     transition: .3s border;\r\n     background: var(--white);\r\n }\r\n h2{\r\n     margin: 0;\r\n     margin-bottom: 1em;\r\n     font-size: 18px;\r\n     font-weigth:700;\r\n }\r\n p{\r\n     font-size: .9em;\r\n     margin-buttom: .5em;\r\n }\r\n`\r\nfunction Country({\r\n  flag,\r\n  name,\r\n  population,\r\n  region,\r\n  capital,\r\n  nativeName,\r\n  cioc,\r\n  alpha2Code,\r\n}) {\r\n    const history = useHistory()\r\n    function handleClick() {\r\n        console.log('cioc', cioc)\r\n        // const id = cioc || name\r\n        history.push(`/country/${slugify(alpha2Code)}`)\r\n      }\r\n    return(\r\n        <CountryStyled onClick={handleClick}>    \r\n            <img loading=\"lazy\" src={flag} alt=\"\" />\r\n            <div className=\"details\">\r\n                <h2>{name}</h2>\r\n                <p><strong>Population:</strong> {population}</p>\r\n                <p><strong>Region:</strong> {region}</p>\r\n                <p><strong>Capital:</strong> {capital}</p>                \r\n            </div>            \r\n        </CountryStyled>\r\n    )\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled = styled.div`\r\n    max-width: 1280px;\r\n    margin: auto;\r\n    padding: 0 1rem;\r\n`\r\n\r\nfunction Wrapper({children}) {\r\n    return(\r\n        <WrapperStyled>\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n\r\nexport default Wrapper","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components'\r\nimport Country from './country'\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport Wrapper from './wrapper'\r\n\r\n\r\nconst CountryListStyled = styled.div`\r\n    display: grid;\r\n    grid-row-gap: 2.3em;\r\n    grid-auto-flow: columns;\r\n    grid-column-gap: 66px;\r\n    grid-template-columns: repeat(auto-fill, 270px);\r\n    background: var(--background);\r\n    justify-content: center;\r\n    /* border: 1px solid red; */\r\n    padding: 4em 0;\r\n`\r\n\r\nfunction CountryList() {  \r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const countryListByName = useSelector((state) => state.countryListByName)\r\n\r\n    const countryList = useSelector((state) => {\r\n        if (state.filterByRegion !== ''  && countryListByName.length === 0) {\r\n            return state.countryFilteredByRegion;            \r\n        }\r\n\r\n        if (countryListByName.length > 0) {\r\n            return countryListByName;\r\n        }\r\n\r\n        return state.countryList;\r\n    })\r\n\r\n    console.log('El estado total de mi app es', countryList)\r\n   // const [countryList, setCountryList] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((list) => {\r\n                dispatch({\r\n                    type: 'SET_COUNTRY_LIST',\r\n                    payload: list\r\n                })\r\n                // setCountryList(data)\r\n                console.log(list.length)\r\n            })\r\n            .catch(() => {\r\n                console.log('hubo un error, chequear')\r\n            })        \r\n        }, [dispatch])\r\n       \r\n    return (\r\n        <Wrapper>\r\n            <CountryListStyled>\r\n                {\r\n                countryList.map(({ name, flag, population, capital, region, nativeName, cioc, alpha2Code }) => {\r\n                    return (\r\n                    <Country\r\n                        flag={flag}\r\n                        name={name}\r\n                        key={name}\r\n                        population={population}\r\n                        region={region}\r\n                        capital={capital}\r\n                        nativeName={nativeName}\r\n                        cioc={cioc}\r\n                        alpha2Code={alpha2Code}\r\n                    />\r\n                    )\r\n                })\r\n                }\r\n            </CountryListStyled>\r\n        </Wrapper>                                      \r\n    )   \r\n}\r\n\r\nexport default CountryList","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst InputStyled = styled.label`\r\n    display: inline-flex;\r\n    background: var (--white);\r\n    align-items: center;\r\n    box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n    padding: 0 2rem;\r\n    border-radius: 5px;\r\n    flex: 1;\r\n    i {\r\n        margin-rigth: 1em;\r\n        color: #C4C4C4;\r\n    }\r\n    input{\r\n        border-radius: 5px;\r\n        border: none;\r\n        flex: 1;\r\n        font-size: .9em;\r\n        height: 48px;\r\n        line-height: 48px;     \r\n        outline: 0;           \r\n        &::-webkit-input-placeholder {\r\n            color: #C4C4C4;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Input({...props}) {\r\n    return (\r\n        <InputStyled>\r\n            <i class=\"fas fa-search\"></i>\r\n            <input type=\"text\" {...props} />\r\n        </InputStyled>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Input from './input'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst SearchStyled = styled.div`\r\n   display: flex;\r\n   position: relative;\r\n   .close {\r\n       position: absolute;\r\n       right: 1em;\r\n       top: 1em;\r\n       border-radius: 50%;\r\n       border: none;\r\n       box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n   }\r\n`\r\n\r\nfunction Search() {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const filterByName = (e) => {\r\n        setInputValue(e.target.value)\r\n        dispatch({\r\n            type: 'SET_COUNTRY_BY_NAME',\r\n            payload: e.target.value\r\n        })\r\n    }\r\n    const clearInput = () => {\r\n        dispatch({\r\n            type: 'SET_COUNTRY_BY_NAME',\r\n            payload: ''\r\n        })\r\n        setInputValue('')\r\n    }\r\n    return (\r\n        <SearchStyled>\r\n            {\r\n                inputValue && \r\n                <i class=\"fas fa-times close\" onClick={clearInput}></i>                       \r\n            }\r\n            <Input placeholder=\"Search for a country ...\" value={inputValue} onChange={filterByName} />\r\n        </SearchStyled>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styled from 'styled-components'\r\n\r\nconst RegionFilterStyled = styled.select`\r\n    padding: 1.3em;\r\n    border: none;\r\n    border-radius: 5px;\r\n    outline: 0;\r\n    box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n    background: var (--white);\r\n    color: var(--black);\r\n`\r\n\r\nconst filterByRegionAction = (regionSelected) => {\r\n    return {\r\n        type: 'FILTER_BY_REGION',\r\n        payload: { regionSelected },\r\n    };\r\n}\r\n\r\nexport const Region = () => {\r\n    const dispatch = useDispatch();\r\n    const filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n    /**\r\n   * Disptach filterByRegion action\r\n   * \r\n   * @param {React.SyntheticEvent} selectEvent\r\n   */\r\n\r\n    const onRegionChange = (selectEvent) => {\r\n        const value = selectEvent.target.value;\r\n\r\n        dispatch(filterByRegionAction(value));\r\n    }\r\n\r\n    return (\r\n        <RegionFilterStyled onChange={onRegionChange} value={filterByRegion}>\r\n            <option value=\"\">Filter by Region</option>\r\n            <option value=\"Africa\">Africa</option>\r\n            <option value=\"Americas\">Americas</option>\r\n            <option value=\"Asia\">Asia</option>\r\n            <option value=\"Europe\">Europe</option>\r\n            <option value=\"Oceania\">Oceania</option>        \r\n        </RegionFilterStyled>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Search from './search';\r\nimport {Region as FilterByRegion} from './region'\r\nimport Wrapper from './wrapper';\r\n\r\nconst ActionListStyled = styled.div`\r\n    .grid{\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        grid-row-gap: 40px;      \r\n    }  \r\n    @media screen and (min-width: 768px){\r\n        .grid{\r\n            grid-template-columns: 480px 1fr 200px;\r\n        }\r\n    }\r\n`\r\n\r\nfunction ActionList() {\r\n    return (\r\n        <ActionListStyled>\r\n            <Wrapper>\r\n                <div className=\"grid\">\r\n                    <Search />\r\n                    <span></span>   \r\n                    <FilterByRegion />                   \r\n                </div>\r\n            </Wrapper>\r\n        </ActionListStyled>\r\n    )\r\n}\r\n\r\nexport default ActionList\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport Wrapper from './wrapper'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst HeaderStyled = styled.div`\r\nbackground: var(--white);\r\nmargin-bottom: 1em;\r\nbox-shadow: 0 2px 4px 0 rgba(0,0,0,.06);\r\n    .content {\r\n        height: 80px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;        \r\n    }\r\n    h1 {\r\n        font-size: 24px;\r\n    }\r\n    a{\r\n        text-decoration: none;\r\n        color: var(--dark);\r\n    }\r\n    .dark-mode {\r\n        cursor: pointer;\r\n        .moon {\r\n            transform: rotate(-25deg);\r\n            display: inline-flex;\r\n            margin-right: 10px;            \r\n        }\r\n        p {\r\n            font-size: 16px;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n    @media screen and (min-width: 768px){\r\n        margin-bottom: 3em;\r\n        h1{\r\n            font-size: 24px;\r\n        }\r\n        p{\r\n            font-size: 1em;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Header({ setDarkMode, darkMode }) {\r\n    function handleClick() {\r\n        setDarkMode(!darkMode)\r\n    }\r\n    return (\r\n        <HeaderStyled>\r\n            <Wrapper>\r\n                <div className=\"content\">\r\n                    <Link to=\"/\">\r\n                        <h1>\r\n                            Where in the world?\r\n                        </h1>                    \r\n                    </Link>                    \r\n                    <div className=\"dark-mode\">\r\n                        <p onClick={handleClick}>\r\n                            <span className=\"moon\">\r\n                                {\r\n                                    darkMode ?\r\n                                    <i className=\"fas fa-moon\"></i> :\r\n                                    <i className=\"far fa-moon\"></i>\r\n                                }\r\n                            </span>\r\n                            Dark Mode\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst CountrySelectedStyled = styled.div`\r\nmargin-top: 3em;\r\n  padding-bottom: 3em;\r\n  img {\r\n    width: 100%;\r\n    margin-bottom: 2em;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    grid-row-gap: 1em;\r\n  }\r\n  .border-item {\r\n    padding: .5em 2em;\r\n    border-radius: 5px;\r\n    margin-right: 15px;\r\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n    display: inline-flex;\r\n    margin-bottom: 15px;\r\n    background: var(--white);\r\n  }\r\n  .languages {\r\n    span {\r\n      margin-right: 5px;\r\n      &:after {\r\n        content: ',';\r\n      }\r\n      &:last-child {\r\n        &:after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 120px;\r\n    margin-top: 5em;\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .borders {\r\n      display: inline-flex;\r\n      margin-right: 1em;\r\n      margin-top: 3.5em;\r\n    }\r\n  }\r\n`\r\n\r\nfunction CountrySelected({\r\n    flag,\r\n    name,\r\n    nativeName,\r\n    population,\r\n    region,\r\n    subregion,\r\n    capital,\r\n    topLevelDomain,\r\n    currencies = [],\r\n    languages = [],\r\n    borders = [],\r\n    alpha2Code,\r\n  }) {\r\n    return (\r\n      <CountrySelectedStyled>\r\n        <img src={flag} alt=\"\" />\r\n        <div>\r\n          <h2>{name}</h2>\r\n          <div className=\"grid\">\r\n            <div>\r\n              <p><strong>Native Name:</strong> {nativeName}</p>\r\n              <p><strong>Population:</strong> {population}</p>\r\n              <p><strong>Region:</strong> {region}</p>\r\n              <p><strong>Sub Region:</strong> {subregion}</p>\r\n              <p><strong>Capital:</strong> {capital}</p>\r\n            </div>\r\n            <div>\r\n              <p><strong>Top Level Domain:</strong> {topLevelDomain}</p>\r\n              <p><strong>Currencies:</strong> {currencies.map((item) => <span>{item.name}</span>)}</p>\r\n              <p className=\"languages\"><strong>Languages:</strong> {languages.map((item) => <span>{item.name}</span>)}</p>\r\n            </div>\r\n          </div>\r\n          <p className=\"borders\"><strong>Border Countries:</strong></p>\r\n          {borders.map((item) => <span class=\"border-item\">{item}</span>)}\r\n        </div>\r\n      </CountrySelectedStyled>\r\n    )\r\n  }\r\n\r\nexport default CountrySelected","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport Wrapper from './wrapper'\r\nimport {  useSelector } from 'react-redux';\r\nimport CountrySelected from './country-selected'\r\n\r\nconst CountryPageStyled = styled.div`\r\n.back {\r\n    background: var(--white);\r\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n    padding: .7em 2.2em;\r\n    border-radius: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-top: 1em;\r\n    color: var(--black);\r\n    i {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    .back {\r\n      margin-top: 3em;\r\n    }\r\n  }\r\n`\r\n\r\nfunction CountryPage({ match, history }){\r\n    let DBcountry = useSelector(state => state.countryList.find(item => item.alpha2Code === match.params.id))\r\n  const [country, setCountry] = useState(DBcountry)    \r\n    useEffect(() => {\r\n        if(!country){\r\n            fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {               \r\n                setCountry(data[0])\r\n            })\r\n        }\r\n    }, [country, match.params.id])\r\n    function handleClick() {\r\n        history.goBack()\r\n      }\r\n    return (\r\n        <CountryPageStyled>\r\n            <Wrapper>\r\n            <button className=\"back\" onClick={handleClick}><i className=\"fas fa-long-arrow-alt-left\"></i> Back</button>\r\n            <CountrySelected {...country}/>             \r\n            </Wrapper>\r\n        </CountryPageStyled>\r\n    )\r\n}\r\n\r\nexport default CountryPage","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CountryList from './country-list'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducer'\nimport ActionList from './action-list'\nimport Header from './header'\nimport CountryPage from './country-page'\nimport {  \n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\n//import BoletasList from './ventas-aloha'\n \n\nconst initialState = {\n  countryList:[],\n  countryListByName:[],\n  countryFilterByRegion:[],\n  filterByRegion:'',\n}\n\nconst store = createStore(reducer, initialState )\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia)\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <Router>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Switch>\n            <Route path=\"/country/:id\" component={CountryPage} />             \n            <Route path=\"/\">\n            {/* <Route path=\"/Boletas\" component={BoletasList} /> */}\n              <ActionList />        \n              <CountryList />        \n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","\r\nexport default function reducer(state, action){\r\n    console.log(action)\r\n    switch (action.type) {\r\n      case 'SET_COUNTRY_LIST':{\r\n        console.log('Voy a actualizar la lista de paises')\r\n        return {...state, countryList: action.payload}\r\n      }\r\n  \r\n      case 'SET_COUNTRY_BY_NAME':{\r\n          let list\r\n        if(state.filterByRegion !== ''){\r\n            list = state.countryFilteredByRegion\r\n        }else{\r\n            list = state.countryList\r\n\r\n        }\r\n          const countryListByName = list.filter(country => country.name.toLowerCase().includes(action.payload.toLowerCase()))\r\n          return {...state, countryListByName}\r\n      }\r\n  \r\n      case 'FILTER_BY_REGION':{\r\n          const {regionSelected} = action.payload;\r\n\r\n          if ('' === regionSelected) {\r\n            return{...state, countryFilteredByRegion:[], filterByRegion:'', };\r\n          }\r\n          const countryFilteredByRegion = state.countryList.filter((country) => country.region === regionSelected);\r\n  \r\n          return {...state, countryFilteredByRegion, filterByRegion: regionSelected}\r\n  \r\n      }\r\n      default:{\r\n        return state\r\n      }      \r\n    } \r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}